-- SCRIPT DE CREACIÓN DE LA BASE DE DATOS Y TABLAS PARA EL SISTEMA DE GESTIÓN DE ACTIVIDADES ESTUDIANTILES
-- BASE DE DATOS: UTP_ACTIVIDADES_ESTUDIANTILES
-- AUTOR: [VIRGILIO E. SALDANA MARTINEZ]
-- FECHA: 2025-04-29



USE UTP_ACTIVIDADES_ESTUDIANTILES
GO


DROP IF EXISTS TABLE ESTUDIANTE_USUARIO;COMMIT;
DROP IF EXISTS TABLE GRUPO_ESTUDIANTIL;COMMIT;
DROP IF EXISTS TABLE ACTIVIDAD_ESTUDIANTIL;COMMIT;
DROP IF EXISTS TABLE REGISTRO_PARTICIPACION;COMMIT;

-- TABLA: ESTUDIANTE_USUARIO
-- DESCRIPCION: Almacena la información de los estudiantes que participan en actividades estudiantiles.
CREATE TABLE ESTUDIANTE_USUARIO(
    ESTUDIANTE_ID INT PRIMARY KEY,
    NOMBRE_ESTUDIANTE VARCHAR(50) NOT NULL,
    CORREO_UTP_ESTUDIANTE VARCHAR(50) NOT NULL,
    TELEFONO_ESTUDIANTE VARCHAR(15) NOT NULL,
    FECHA_NACIMIENTO_ESTUDIANTE DATE NOT NULL,
    FACULTAD_ESTUDIANTE VARCHAR(50) NOT NULL,
    CARRERA_ESTUDIANTE VARCHAR(50) NOT NULL,
    CONSTRAINT UQ_ESTUDIANTE_CORREO UNIQUE (CORREO_UTP_ESTUDIANTE),
    CONSTRAINT UQ_ESTUDIANTE_TELEFONO UNIQUE (TELEFONO_ESTUDIANTE)
)
COMMIT;

-- TABLA: GRUPO_ESTUDIANTIL
-- DESCRIPCION: Almacena la información de los grupos estudiantiles que organizan actividades.
CREATE TABLE GRUPO_ESTUDIANTIL(
    GRUPO_ID INT PRIMARY KEY,
    NOMBRE_GRUPO VARCHAR(50) NOT NULL,
    DESCRIPCION_GRUPO VARCHAR(255) NOT NULL,
    ESTADO_GRUPO VARCHAR(20) NOT NULL CHECK (ESTADO_GRUPO IN ('ACTIVO', 'INACTIVO')),
    CONSTRAINT UQ_GRUPO_NOMBRE UNIQUE (NOMBRE_GRUPO)
)
COMMIT;

-- TABLA: ACTIVIDAD_ESTUDIANTIL
-- DESCRIPCION: Almacena la información de las actividades estudiantiles organizadas por los grupos.
CREATE TABLE ACTIVIDAD_ESTUDIANTIL(
    ACTIVIDAD_ID INT PRIMARY KEY,
    NOMBRE_ACTIVIDAD VARCHAR(50) NOT NULL,
    DESCRIPCION_ACTIVIDAD VARCHAR(255) NOT NULL,
    FECHA_ACTIVIDAD DATE NOT NULL,
    HORA_INICIO_ACTIVIDAD TIME NOT NULL,
    HORA_FIN_ACTIVIDAD TIME NOT NULL,
    LUGAR_ACTIVIDAD VARCHAR(100) NOT NULL,
 -- CAPACIDAD_MAXIMA INT NOT NULL CHECK (CAPACIDAD_MAXIMA > 0),
    CANTIDAD_INSCRITOS INT DEFAULT 0 CHECK (CANTIDAD_INSCRITOS >= 0),
    TIPO_ACTIVIDAD VARCHAR(50) NOT NULL CHECK (TIPO_ACTIVIDAD IN ('SOCIAL', 'ACADEMICA', 'CULTURAL')),
 -- TIPO_ACTIVIDAD_ESTUDIANTIL VARCHAR(50) NOT NULL CHECK (TIPO_ACTIVIDAD_ESTUDIANTIL IN ('SOCIAL', 'ACADEMICA', 'CULTURAL')),
    ESTADO_ACTIVIDAD VARCHAR(20) NOT NULL CHECK (ESTADO_ACTIVIDAD IN ('ABIERTA', 'CERRADA')),
    GRUPO_ID INT NOT NULL,
    FOREIGN KEY (GRUPO_ID) REFERENCES GRUPO_ESTUDIANTIL(GRUPO_ID)
)
COMMIT;

-- TABLA: REGISTRO_PARTICIPACION
-- DESCRIPCION: Almacena el registro de participación de los estudiantes en las actividades organizadas por los grupos.
CREATE TABLE REGISTRO_PARTICIPACION(
    REGISTRO_ID INT PRIMARY KEY,
    ESTUDIANTE_ID INT NOT NULL,
    ACTIVIDAD_ID INT NOT NULL,
    ESTADO_CONFIRMACION VARCHAR(20) NOT NULL CHECK (ESTADO_CONFIRMACION IN ('CONFIRMADO', 'NO_CONFIRMADO')),
    FOREIGN KEY (ESTUDIANTE_ID) REFERENCES ESTUDIANTE_USUARIO(ESTUDIANTE_ID),
    FOREIGN KEY (ACTIVIDAD_ID) REFERENCES ACTIVIDAD_ESTUDIANTIL(ACTIVIDAD_ID),
 -- CONSTRAINT UQ_REGISTRO_UNICO UNIQUE (ESTUDIANTE_ID, ACTIVIDAD_ID)
)COMMIT;